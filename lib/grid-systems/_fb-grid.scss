//// ---------------------------------------------------------------------------------------------
///   THIS: scss-core
///
///   - Floating Blocks Grid System -
///
/// @group Grid Systems
/// @since 0.0.1
//// ---------------------------------------------------------------------------------------------


/// Defines the default grid column count
$fb-grid__default-columns: 12 !default;

/// Defines the default grid gutter
$fb-grid__default-gutter: 1.5% !default;

/// Defines, if the default grid starts with a column or a gutter
$fb-grid__default-column-first: true !default;

/// Defines, if the push and pull mixins affect the following grid elements
$fb-grid__default-push-pull-affects-followers: false !default;

///
/// Holds the floating blocks grid configuration.
/// Configure this in your project settings.
///
/// @example
///     $fb-grid-config: (
///         'example-section-grid': ( columns: 3,  gutter: 2em,  column-first: true ),
///
///         'grid-1':               ( columns: 12, gutter: 2%,   column-first: true  ),
///         'grid-1-gut':           ( columns: 12, gutter: 2%,   column-first: false ),
///
///         'grid-2':               ( columns: 12, gutter: 20px, column-first: true  ),
///         'grid-2-gut':           ( columns: 12, gutter: 20px, column-first: false ),
///     );
///
$fb-grid-config: () !default;


///
///
///
@function _fb-grid-calc-column-width($units, $columns, $gutter) {

    // set $gutter = 0 for "padding" grids
    $gutter : if(unit($gutter) == '%', $gutter, 0);
    $total-gutter: ($columns) * $gutter;
    $single-column-width: (100% - $total-gutter) / $columns;

    @return ($single-column-width * $units) + ($gutter * ($units - 1));
}


///
///
///
@function _fb-grid-calc-offset($units, $columns, $dir, $gutter) {

    // set $gutter = 0 for "padding" grids
    $gutter : if(unit($gutter) == '%', $gutter, 0);
    $dir: if($dir == 'left', -1, if($dir == 'right', 1, 0));
    $offset : _fb-grid-calc-column-width($units, $columns, $gutter) + $gutter;

    @return $dir * $offset;
}


///
///
///
@mixin _fb-grid-context(
    $gutter: $fb-grid__default-gutter,
    $column-first: $fb-grid__default-column-first
) {

    // Context base styles.
    // Maybe extend dynamic.

    @include clearfix();

    box-sizing: border-box;
    display: block;

    // Context specific margin and padding

    $gutter-prop: if(unit($gutter) == '%', margin, padding);
    $gutter: if($gutter-prop == 'padding', $gutter / 2, $gutter);

    @if ($column-first) {

        $gutter: $gutter * -1;

        @if ($gutter-prop == margin) {

            $expansion-rate : 1 + $gutter / 100%;
            $gutter : $gutter * $expansion-rate;

        } @else {
            margin-right: $gutter;
        }

        margin-left: $gutter;

    } @else {

        padding-right: $gutter;

        @if ($gutter-prop == padding) {
            padding-left: $gutter;
        }
    }
}


///
///
///
@mixin fb-grid-context($grid-id: null) {

    $gc: ();

    @if ($grid-id != null and type-of($grid-id) == string) {
        $gc: map-get($fb-grid-config, $grid-id);
    }

    $gutter: if(map-has-key($gc, 'gutter'), map-get($gc, 'gutter'), $fb-grid__default-gutter);
    $column-first: if(map-has-key($gc, 'column-first'), map-get($gc, 'column-first'), $fb-grid__default-column-first);

    @include _fb-grid-context($gutter, $column-first);
}


///
///
///
@mixin _fb-grid-column(
    $units,
    $columns: $fb-grid__default-columns,
    $gutter: $fb-grid__default-gutter,
    $column-first: $fb-grid__default-column-first
) {

    // Column base styles.
    // Maybe extend dynamic.

    box-sizing: border-box;
    float: left;
    position: relative;
    min-height: 1px;

    // Column specific width, margin, padding

    @if (unit($gutter) == '%') {
        // unit is % --> gutter property = margin

        margin-left: $gutter;

    } @else {
        // unit is NOT % --> gutter property = padding

        $gutter: $gutter / 2;

        padding: {
            left: $gutter;
            right: $gutter;
        }

        // set to 0 to calculate the correct width for "padding-grids"
        $gutter: 0;
    }

    width: _fb-grid-calc-column-width($units, $columns, $gutter);
}


///
///
///
@mixin fb-grid-column($units, $grid-id: null) {

    $gc: ();

    @if ($grid-id != null and type-of($grid-id) == string) {
        $gc: map-get($fb-grid-config, $grid-id);
    }


    $columns: if(map-has-key($gc, 'columns'), map-get($gc, 'columns'), $fb-grid__default-columns);
    $gutter: if(map-has-key($gc, 'gutter'), map-get($gc, 'gutter'), $fb-grid__default-gutter);
    $column-first: if(map-has-key($gc, 'column-first'), map-get($gc, 'column-first'), $fb-grid__default-column-first);

    @include _fb-grid-column($units, $columns, $gutter, $column-first);
}


///
///
///
@mixin fb-grid-new-row() {
    clear: both;
}


///
///
///
@mixin _fb-grid-column-push-pull($units, $columns, $gutter, $dir, $affect-followers) {

    $prefix: if($affect-followers, margin-, '');
    $correction: if($affect-followers and unit($gutter) == '%', $gutter, 0);

    #{$prefix}left: _fb-grid-calc-offset($units, $columns, $dir, $gutter) + $correction;
}


///
///
///
@mixin _fb-grid-column-push(
    $units,
    $columns: $fb-grid__default-columns,
    $gutter: $fb-grid__default-gutter,
    $affect-followers: $fb-grid__default-push-pull-affects-followers
) {

    @include _fb-grid-column-push-pull($units, $columns, $gutter, right, $affect-followers)
}


///
///
///
@mixin fb-grid-column-push(
    $units,
    $grid-id: null,
    $affect-followers: $fb-grid__default-push-pull-affects-followers
) {

    $gc: ();

    @if ($grid-id != null and type-of($grid-id) == string) {
        $gc: map-get($fb-grid-config, $grid-id);
    }

    $columns: if(map-has-key($gc, 'columns'), map-get($gc, 'columns'), $fb-grid__default-columns);
    $gutter: if(map-has-key($gc, 'gutter'), map-get($gc, 'gutter'), $fb-grid__default-gutter);

    @include _fb-grid-column-push($units, $columns, $gutter, $affect-followers);
}


///
///
///
@mixin _fb-grid-column-pull(
    $units,
    $columns: $fb-grid__default-columns,
    $gutter: $fb-grid__default-gutter,
    $affect-followers: $fb-grid__default-push-pull-affects-followers
) {

    @include _fb-grid-column-push-pull($units, $columns, $gutter, left, $affect-followers)
}


///
///
///
@mixin fb-grid-column-pull(
    $units,
    $grid-id: null,
    $affect-followers: $fb-grid__default-push-pull-affects-followers
) {

    $gc: ();

    @if ($grid-id != null and type-of($grid-id) == string) {
        $gc: map-get($fb-grid-config, $grid-id);
    }

    $columns: if(map-has-key($gc, 'columns'), map-get($gc, 'columns'), $fb-grid__default-columns);
    $gutter: if(map-has-key($gc, 'gutter'), map-get($gc, 'gutter'), $fb-grid__default-gutter);

    @include _fb-grid-column-pull($units, $columns, $gutter, $affect-followers);
}

