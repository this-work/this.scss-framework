////
///
/// Page Libary
///
/// @group Page
/// @since 2.3.0
///
////



///
/// Max width of the page area
/// @type number
///
$max-page-width: 1920px !default;



///
/// Basic width of the content area for calculations
/// @type number
///
$basic-content-width: 1080px !default;



///
/// Responsive declaration of the site area columns
/// Key can be existing viewport key or absolute number
/// 'viewport' defines the width of the viewport area
/// 'page' defines the width of the page area
/// 'content' defines the width of the content area
/// @type array
/// @example scss - Set two page spacings
///  $site-area-columns: (
// 		'default': (
//        	'viewport': 0,
//        	'page': 20px,
//        	'content': 1fr
// 		)
//   );
///
$site-area-columns: () !default;



///
/// Generate the grid context for the viewport, page and content areas
///
/// @param {string} $mode [viewport] - [`optional`] mode auf the column classification
///
/// @example scss - Set all area columns
/// include grid-areas();
///
@mixin grid-areas (
	$mode: 'viewport'
) {
	display: grid;
	grid-row-gap: 0;

	$largest-breakpoint: 0px;
	$largest-breakpoint-content-width: 0px;

	@each $breakpoint, $settings in $site-area-columns {

		$content-width: map-get($settings, 'content');
		$page-spacing: map-get($settings, 'page');
		$viewport-spacing: map-get($settings, 'viewport');

		$current-breakpoint: $breakpoint;

		@if (type-of($breakpoint) == string) {

			@if ($breakpoint == 'default') {

				$current-breakpoint: 0px;

			}@else{

				$current-breakpoint: map-get($breakpoint-config, $breakpoint);

			}
		}

		@if ($largest-breakpoint < $current-breakpoint) {
			$largest-breakpoint: $current-breakpoint;
			$largest-breakpoint-content-width: $content-width;
		}

		@include possible-mediaquery($breakpoint) {

			@if($mode == 'page') {

				@include grid-template-columns($page-spacing $content-width $page-spacing);

			}@else{

				@include grid-template-columns($viewport-spacing $page-spacing $content-width $page-spacing $viewport-spacing);

			}

		}

	}

	@include above(2 * $max-page-width - $largest-breakpoint-content-width) {

		$fixed-page-width: ($max-page-width - $largest-breakpoint-content-width) / 2;

		@include grid-template-columns(1fr $fixed-page-width $largest-breakpoint-content-width $fixed-page-width 1fr);

	}

}
