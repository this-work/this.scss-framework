//// ---------------------------------------------------------------------------------------------
///   THIS: scss-core
///
///   - Conversion -
///
/// @group Core
/// @since 0.0.1
//// ---------------------------------------------------------------------------------------------


/// Default conversion context
$default-conversion-context: 16px !default;


///
/// Strips the unit from a given number
///
/// @param {number} $number [] - [`required`] Number to remove unit from
///
/// @return {number} - Unitless number
///
@function strip-unit($number) {

    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}


///
/// Converts `px` to `em`
///
/// @param {number} $px [] - [`required`] px value to convert
/// @param {number} $context [$default-conversion-context] - [`optional`] conversion context
///
/// @returns {number} - the `px` value converted to `em`
///
@function em($px, $context: $default-conversion-context) {
    @return (strip-unit($px) / strip-unit($context)) * 1em;
}


///
/// Converts `px` to `rem`
///
/// @param {number} $px [] - [`required`] px value to convert
/// @param {number} $context [$default-conversion-context] - [`optional`] conversion context
///
/// @returns {number} - the `px` value converted to `rem`
///
@function rem($px, $context: $default-conversion-context) {
    @return (strip-unit($px) / strip-unit($context)) * 1rem;
}


///
/// Converts `rem` | `em` to `px`
///
/// @param {number} $r-em [] - [`required`] rem | em value to convert
/// @param {number} $context [$default-conversion-context] - [`optional`] conversion context
///
/// @returns {number} - the `rem` | `em` value converted to `px`
///
@function px($r-em, $context: $default-conversion-context) {
    @return (strip-unit($r-em) * strip-unit($context)) * 1px;
}
