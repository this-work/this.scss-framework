//// ---------------------------------------------------------------------------------------------
///   THIS: scss-core
///
///   - Scss-Helper: Centering -
///
///     Contains mixins and functions to create css shapes
///
/// @group SCSS Helper
/// @since 0.0.1
//// ---------------------------------------------------------------------------------------------


///
/// Mixin to create CSS triangles.
///
/// Adopted from https://github.com/at-import/toolkit/blob/2.x.x/stylesheets/toolkit/_triangle.scss
///
/// @param {number} $width [] - `[required]` The width of the triangle
///
/// @param {number} $height [] - `[required]` The height of the triangle
///
/// @param {string | number} $angle [] - `[required]` Direction of the triangle.
///
/// Possible values are
///
/// - top
/// - top right
/// - right
/// - bottom right
/// - bottom
/// - bottom left
/// - left
/// - top left
///
/// or any number between 0 and 360
///
/// @param {color} $color [#000000] - `[optional]` <br> Color of the triangle.
///
@mixin triangle($width, $height, $angle, $color : #000000) {

    @if nth($angle, 1) == "top" or nth($angle, 1) == "bottom" { $angle : "#{$angle}"; }

    @if $angle == "top"          { $angle : 0; }
    @if $angle == "top right"    { $angle : 45 * 7; }
    @if $angle == "right"        { $angle : 45 * 2; }
    @if $angle == "bottom right" { $angle : 45 * 1; }
    @if $angle == "bottom"       { $angle : 45 * 4; }
    @if $angle == "bottom left"  { $angle : 45 * 3; }
    @if $angle == "left"         { $angle : 45 * 6; }
    @if $angle == "top left"     { $angle : 45 * 5; }

    // offset 45deg to make each side start at 0
    $deg : $angle + 45;

    // if units, remove units
    $deg : strip-unit($deg);

    // shift to be on a scale from 0 to 90.
    @while $deg > 90 {
        $deg : $deg - 90;
    }

    @while $deg < 0 {
        $deg : $deg + 90;
    }

    // Get a ratio of 90 to multiply by.
    $deg: $deg / 90;

    // make sure metrics are reseted
    display: block;
    width: 0;
    height: 0;
    border: 0 solid transparent;

    // run through sides
    @if $angle <= 45 or $angle > 315 {

        border-bottom-color: $color;
        border-width: 0 ($width * abs($deg - 1)) $height ($width * $deg);
    }

    @if $angle > 45 and $angle <= 135 {

        border-left-color: $color;
        border-width: ($height * $deg) 0 ($height * abs($deg - 1)) $width;
    }

    @if $angle > 135 and $angle <= 225 {

        border-top-color: $color;
        border-width: $height ($width * $deg) 0 ($width * abs($deg - 1));
    }

    @if $angle > 225 and $angle <= 315 {

        border-right-color: $color;
        border-width: ($height * abs($deg - 1)) $width ($height * $deg) 0;
    }
}
